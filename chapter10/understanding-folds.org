* Understanding folds
** 1)
b)
#+NAME=One
#+BEGIN_SRC haskell :tangle understanding-folds.hs :comments link
oneQ = foldr (*) 1 [1..5]
oneA = foldl (flip (*)) 1 [1..5]
#+END_SRC
** 2)
#+BEGIN_SRC haskell
foldl (flip (*)) 1 [1..3]
(1 * 1) * (foldl (flip (*)) [2,3])
((1 * 1) * 2) * (foldl (flip (*)) [3])
(((1 * 1) * 2) * 3)
#+END_SRC
** 3)
c)
** 4)
a)
** 5)
#+BEGIN_SRC haskell :tangle understanding-folds.hs :comments link
fiveA = foldr (++) "" ["woot", "WOOT", "woot"]
fiveB = foldr max 'a' "fear is the little death"
fiveC = foldr (&&) True [False, True]
fiveD = foldr (||) False [False, True]
fiveE = foldl (\x y -> x ++ (show y)) "" [1..5]
fiveF = foldr (\x y -> const (head . show $ x) y) 'a' [1..5]
fiveG = foldr const '0' "tacos"
fiveH = foldl (flip const) '0' "burritos"
fiveI = foldl (\x y -> const x (head . show $ y)) 'z' [1..5]
#+END_SRC
